services:
  mysql:
    image: mysql:8.0
    container_name: archi-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - archi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: archi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - archi-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  archi-admin:
    build:
      context: ./archi-admin
      dockerfile: Dockerfile
    container_name: archi-admin
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - archi-network
    restart: unless-stopped

  archi-service:
    build:
      context: ./archi-service
      dockerfile: Dockerfile
    container_name: archi-service
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - archi-network
    restart: unless-stopped
  archi-ai:
    build:
      context: ./archi-ai
      dockerfile: Dockerfile
    env_file:
      - ./archi-ai/.env.docker
    container_name: archi-ai
    ports:
      - "8082:8000"
    environment:
      - ENVIRONMENT=docker
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    networks:
      - archi-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
   
  nginx:
    build:
      context: ./archi-front
      dockerfile: Dockerfile
    container_name: archi-nginx
    ports:
      - "80:80"
    networks:
      - archi-network
    restart: unless-stopped

  mysql-exporter:
    container_name: mysql-exporter
    image: prom/mysqld-exporter
    command:
      - '--config.my-cnf=/etc/mysql/exporter.cnf'
      - "--collect.global_status"
      - "--collect.info_schema.innodb_metrics"
    volumes:
      - ./config/exporter.cnf:/etc/mysql/exporter.cnf:ro
    ports:
      - "9104:9104"
    depends_on:
      - mysql
    networks:
      - archi-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  archi-network:
    driver: bridge